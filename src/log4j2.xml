<?xml version="1.0" encoding="UTF-8"?>
<Configuration status="warn" monitorInterval="30">
	<Properties>
		<Property name="LOG_HOME">./logs</Property>
		<Property name="LOG_LEVEL">info</Property>
	</Properties>
	<Appenders>
	
		<!--这个输出控制台的配置 -->
		<Console name="Console" target="SYSTEM_OUT">
			<ThresholdFilter level="trace" onMatch="ACCEPT"
				onMismatch="DENY" />
			<PatternLayout pattern="%d{yyyy-MM-dd HH:mm:ss,SSS}:%4p %t (%F:%L) - %m%n" />
		</Console>
		
		<!--文件会打印出所有信息，这个log每次运行程序会自动清空，由append属性决定，这个也挺有用的，适合临时测试用 -->
		<!-- ① fileName，String，指定写入的log文件的名称。 ② append，boolean，指定是否是追加写入（append=true，默认情况），还是覆盖写入（append=false）。 
			③ bufferedIO，boolean，是否对数据进行缓冲到缓冲区满后再写入。测试显示，即使在启用immediateFlush的情况下，设置bufferedIO=true也能提高性能。 
			④ locking，boolean，是否对文件上锁，当有多个线程可能同时写该文件时需要考虑上锁 -->
		<File name="log" fileName="${LOG_HOME}/test.log" append="false">
			<PatternLayout
				pattern="%d{HH:mm:ss.SSS} %-5level %class{36} %L %M - %msg%xEx%n" />
		</File>

		<RollingFile name="RollingFile" fileName="${LOG_HOME}/info.log"
			filePattern="${LOG_HOME}/$${date:yyyy-MM}/info-%d{yyyy-MM-dd}-%i.log.gz">
			<ThresholdFilter level="info" onMatch="ACCEPT"
				onMismatch="DENY" />
			<PatternLayout pattern="%d{yyyy-MM-dd HH:mm:ss,SSS}:%4p %t (%F:%L) - %m%n" />
			<Policies>
				<OnStartupTriggeringPolicy />
				<TimeBasedTriggeringPolicy />
				<SizeBasedTriggeringPolicy size="80 MB" />
			</Policies>
		</RollingFile>
	</Appenders>
	<Loggers>
		<Root level="debug"> <!-- 全局配置 -->
			<AppenderRef ref="Console" />
		</Root>
		<Logger name="com.test.log" level="${LOG_LEVEL}" additivity="true">
			<AppenderRef ref="RollingFile" />
		</Logger>
	</Loggers>
</Configuration>